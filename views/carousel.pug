extends layout

block body
    - console.log("카로셀 body SETTING . . .");

    #carousel-wrapper
        +carousel("viewer",urlList, text)
        +icon("home")
        +icon("fullscreen")
        +icon("option-vertical")
        #option-wrapper
            .optionList Auto Mode


    #email-wrapper
        +icon("remove")
        .dialog-title Want to read more?

        .dialogSubject Please check sign-up link in your inbox. The author of this content can view the information you have entered.
        input(class="custom-input" type="text" placeholder="Email" autoComplete="off" id="email-input" )
        .emailError


        #classic-modal-slide-policy
            input(type="checkbox" id="termsCheckbox")
            label(for="termsCheckbox")
                span
                    +iconOk("ok")
                .checkbox-explain I agree to submit this information, which will be collected and used according to &nbsp
                    a(class="checkbox-policy-link" target="_blank" href=mainHost + "/legal/policy.html" rel="noopener noreferrer" title="Read decompany’s privacy policy.") Decompany’s privacy policy.

        .ok-btn Sign up
        .cancel-btn Cancel






block scripts
    - console.log("카로셀 script SETTING . . .");
    script.
        let shortId = '#{shortid}' || "",
            documentId = '#{documentId}' || "",
            seoTitle = '#{seoTitle}' || "",
            username = '#{username}' || "",
            docTitle = '#{docTitle}' || "",
            forceTracking = '#{forceTracking}' === "true",
            useTracking = '#{useTracking}' === "true",
            cid = null,
            sid = null,
            clientEmail = null,
            fullscreenFlag = false,
            optionFlag = false,
            autoOption = false,
            page = 1,
            useTrackingModalFlag = false;

        const carouselInner = $(".carousel-inner"),
            carouselViewer = $('#carousel-viewer'),
            carouselWrapper = $('#carousel-wrapper');


        $(document).ready(() => {

            // 첫 페이지 CSS 설정
            const activeEl = $(".active")[0].firstChild;
            setResolve(activeEl);

            // 첫 페이지 트랙킹
            postTracking()

            // 카로셀 설정
            $(".carousel").carousel({
                keyboard: true,
                interval: 0
            });
        })


        // 윈도우 창 크기 변화 체크
        $(window).resize(() => {
            const activeEl = $(".active")[0].firstChild;
            setResolve(activeEl);
        });


        // 전체화면 버튼
        $(".glyphicon-fullscreen").click(() => {
            handelFullscreen();
        });


        // 옵션 버튼
        $(".glyphicon-option-vertical").click(() => {
            if (!optionFlag) {
                showOption();
            } else {
                hideOption();
            }
        });


        // 홈 버튼
        $(".glyphicon-home").click(() => {
            let url = '#{mainHost}' + "/" + username + "/" + seoTitle;
            window.open(url, '_blank');
        });


        // 옵션 자동 진행 버튼
        $(".optionList").click(() => {
            if (!autoOption) {
                $(".optionList").text("Manual Mode");
                $(".carousel").carousel({
                    interval: 2000,
                });
            } else {
                $(".optionList").text("Auto Mode");
                $(".carousel").carousel({
                    interval: 0
                });
            }
            autoOption = !autoOption;
            hideOption();
        });


        // 이메일 모달 값 입력 체크
        $("#email-input").keyup(function () {
            let value = $("#email-input").val(),
                checkEmail = checkEmailForm(value),
                errMsg = checkEmail ? "" : "Email address does not fit the form .";
            $(".emailError").text(errMsg);
        })


        // 이메일 모달 체크박스 클릭
        $("#termsCheckbox").change(function () {
            const termsCheckbox = document.getElementById("termsCheckbox").nextElementSibling.firstChild;
            if ($("#termsCheckbox").is(":checked")) {
                termsCheckbox.style.border = "1px solid #3681fe";
            } else {
                termsCheckbox.style.border = "1px solid #f92121";
            }
        })


        // 이메일 sign up 버튼 클릭
        $(".ok-btn").click(function () {
            let emailError = $(".emailError").text();
            if (emailError !== "" && !$("#termsCheckbox").is(":checked")) {
                return;
            }

            let data = {
                "cid": getId().cid,
                "sid": getId().sid,
                "email": $("#email-input").val(),
                "documentId": seoTitle
            }

            $.ajax({
                type: "POST",
                accept: "application/json",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(data),
                dataType: "json",
                url: '#{apiUrl}' + "/api/tracking/confirm",
                success: function (res) {
                    postTracking();
                }
            })
        })


        // 취소 버튼 클릭
        $(".cancel-btn").click(function () {
            if (!forceTracking) {
                $(".carouselImg").css("filter", "none");
                useTrackingModalFlag = true;
            }
            $("#email-wrapper").css("display", "none");
        })


        // 슬라이드 페이지 전환 직전 이벤트
        carouselViewer.on('slide.bs.carousel', (e) => {
            checkRatio();
        })


        // 슬라이드 페이지 전환 직후 이벤트
        carouselViewer.on('slid.bs.carousel', (e) => {
            getPageFromUrl();
        })


        // url에서 페이지 GET
        getPageFromUrl = () => {
            const activeEl = $(".active")[0].firstChild,
                splitArr = activeEl.src.split("/");
            page = splitArr[splitArr.length - 1];
            postTracking();
        }


        // forceTracking, clientEmail, pageNum >2 이메일 모달 등장 조건
        // 트랙킹 진행
        postTracking = () => {
            tracking(shortId, {
                id: documentId,
                n: page,
                ev: "view",
                apiDomain: '#{apiUrl}'
            }, true, false, function (res, params) {
                if (Number(page) === 1) {
                    $("#email-wrapper").css("display", "none");
                    $(".carouselImg").css("filter", "none");
                } else {
                    if (forceTracking) {
                        if (res.user) {
                            clientEmail = res.user.e;
                            $("#email-wrapper").css("display", "none");
                            $(".carouselImg").css("filter", "none");
                        } else {
                            $("#email-wrapper").css("display", "block");
                            $(".carouselImg").css("filter", "blur(5px)");
                        }
                    } else if (!forceTracking && useTracking && !useTrackingModalFlag) {
                        if (res.user) {
                            clientEmail = res.user.e;
                            $("#email-wrapper").css("display", "none");
                        } else {
                            $("#email-wrapper").css("display", "block");
                        }
                        $(".carouselImg").css("filter", "none");
                    }
                }

                setId(params);
            });
        }


        // cid, sid 설정
        setId = (params) => {
            cid = params.cid;
            sid = params.sid;
        }

        // cid, sid GET
        getId = () => {
            return {"cid": cid, "sid": sid};
        }


        //옵션 숨김
        hideOption = () => {
            $("#option-wrapper").css("display", "none");
            optionFlag = false;
        }


        //옵션 표시
        showOption = () => {
            $("#option-wrapper").css("display", "inline-block");
            optionFlag = true;
        }


        // 화면, 이미지 비율 비교
        checkRatio = () => {
            const activeEl = $(".active");
            setResolve(activeEl.next()[0] ? activeEl.next()[0].firstChild : carouselInner[0].firstChild.firstChild);
            setResolve(activeEl.prev()[0] ? activeEl.prev()[0].firstChild : carouselInner[0].lastChild.firstChild);
        }


        // 해상도 별 이미지 CSS 설정
        setResolve = (e) => {
            let icw = window.innerWidth,
                ich = window.innerHeight,
                inw = e.naturalWidth,
                inh = e.naturalHeight,
                ratioXForMargin = icw / inw,
                ratioYForMargin = ich / inh;

            if ((ich / icw) >= (inh / inw)) {
                let marginValue = Math.floor(Math.abs(ich - (inh * ratioXForMargin)) / 2);
                e.style.width = "100%";
                e.style.height = "auto";
                e.style.paddingLeft = "0";
                e.style.paddingTop = marginValue + 'px';
            } else {
                let marginValue = Math.floor(Math.abs(icw - (inw * ratioYForMargin)) / 2);
                e.style.width = "auto";
                e.style.height = "100%";
                e.style.paddingLeft = marginValue + 'px';
                e.style.paddingTop = "0";
            }

        }


        // 전체화면 메소드
        handelFullscreen = () => {
            if (!fullscreenFlag) {
                if (carouselWrapper[0].requestFullscreen) {
                    carouselWrapper[0].requestFullscreen();
                } else if (carouselWrapper[0].mozRequestFullScreen) { /* Firefox */
                    carouselWrapper[0].mozRequestFullScreen();
                } else if (carouselWrapper[0].webkitRequestFullscreen) { /* Chrome, Safari and Opera */
                    carouselWrapper[0].webkitRequestFullscreen();
                } else if (carouselWrapper[0].msRequestFullscreen) { /* IE/Edge */
                    carouselWrapper[0].msRequestFullscreen();
                }
                fullscreenFlag = true;
            } else {
                if (document.exitFullscreen) {
                    document.exitFullscreen();
                } else if (document.mozCancelFullScreen) { /* Firefox */
                    document.mozCancelFullScreen();
                } else if (document.webkitExitFullscreen) { /* Chrome, Safari and Opera */
                    document.webkitExitFullscreen();
                } else if (document.msExitFullscreen) { /* IE/Edge */
                    document.msExitFullscreen();
                }
                fullscreenFlag = false;
            }
        }


        // json => 쿼리 스트링
        jsonToQueryString = (json) => {
            return "?" +
                Object.keys(json).map(function (key) {
                    return encodeURIComponent(key) + "=" +
                        encodeURIComponent(json[key]);
                }).join("&");
        }


        // 이메일 양식 체크
        checkEmailForm = (email) => {
            let regExp = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;

            return email.match(regExp);
        };


